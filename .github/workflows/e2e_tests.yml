name: e2e_tests

on:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**.md"
  push:
    branches:
      - master
    paths-ignore:
      - "docs/**"
      - "**.md"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: read-all

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  detect_changed_packages:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.filter.outputs.changed_packages }}
      has_changes: ${{ steps.filter.outputs.changed_packages != '[]' }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/changes_e2e
        id: filter

  android:
    runs-on: macos-13
    timeout-minutes: 45
    needs: detect_changed_packages
    if: needs.detect_changed_packages.outputs.has_changes == 'true'
    strategy:
      fail-fast: true
      matrix:
        package: ${{ fromJson(needs.detect_changed_packages.outputs.packages) }}
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      - uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c
        name: Install Node.js 18
        with:
          node-version: "18"
      - uses: actions/setup-java@cd89f46ac9d01407894225f350157564c9c7cee2
        with:
          distribution: "temurin"
          java-version: "11"
      - uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        name: Gradle Cache
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-v4-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-v4
      - uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        name: AVD Cache
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd
      - name: Firebase Emulator Cache
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        with:
          path: ~/.cache/firebase/emulators
          key: firebase-emulators-v2-${{ github.run_id }}
          restore-keys: firebase-emulators-v2
      - uses: subosito/flutter-action@48cafc24713cca54bbe03cdc3a423187d413aafa
        with:
          channel: "stable"
          cache: true
      - uses: bluefireteam/melos-action@dd3c344d731938d2ab2567a261f54a19a68b5f6a
        with:
          run-bootstrap: false
          melos-version: "3.0.1"
      - name: "Bootstrap package"
        run: melos bootstrap --scope ${{ matrix.package }}_*
      - name: "Install Tools"
        run: |
          sudo npm i -g firebase-tools
      - name: Start Firebase Emulator
        run: cd ./.github/workflows/firebase_emulator && ./start.sh
      - name: Create and start emulator
        run: |
          echo "List installed packages"
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --list_installed

          echo "Installing system image"
          echo "y" | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "system-images;android-33;google_apis;x86_64"

          echo "Creating AVD"
          echo "no" | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/avdmanager create avd -n test_emulator -k "system-images;android-33;google_apis;x86_64" --force

          echo "Starting emulator"
          $ANDROID_SDK_ROOT/emulator/emulator -avd test_emulator -no-audio -no-boot-anim -no-window &
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done; input keyevent 82'
      - name: Run e2e tests
        run: |
          melos exec \
            --scope ${{ matrix.package }}_example \
            -c 1 \
            --fail-fast \
            -- flutter test integration_test/${{ matrix.package }}_e2e.dart

  ios:
    runs-on: macos-12
    timeout-minutes: 45
    needs: detect_changed_packages
    if: needs.detect_changed_packages.outputs.has_changes == 'true'
    strategy:
      fail-fast: true
      matrix:
        package: ${{ fromJson(needs.detect_changed_packages.outputs.packages) }}
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      - uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c
        name: Install Node.js 18
        with:
          node-version: "18"
      - uses: actions/setup-java@cd89f46ac9d01407894225f350157564c9c7cee2
        with:
          distribution: "temurin"
          java-version: "11"
      - uses: hendrikmuhs/ccache-action@ca3acd2731eef11f1572ccb126356c2f9298d35e
        name: Xcode Compile Cache
        with:
          key: ${{ runner.os }}-ios-v3
          max-size: 700M
      - uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        name: Pods Cache
        id: pods-cache
        with:
          path: tests/ios/Pods
          key: ${{ runner.os }}-pods-v3-${{ hashFiles('tests/ios/Podfile.lock') }}
          restore-keys: ${{ runner.os }}-ios-pods-v2
      - name: Firebase Emulator Cache
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8
        with:
          path: ~/.cache/firebase/emulators
          key: firebase-emulators-v1-${{ github.run_id }}
          restore-keys: firebase-emulators-v1
      - uses: subosito/flutter-action@48cafc24713cca54bbe03cdc3a423187d413aafa
        with:
          channel: "stable"
          cache: true
      - uses: bluefireteam/melos-action@dd3c344d731938d2ab2567a261f54a19a68b5f6a
        with:
          run-bootstrap: false
          melos-version: "3.0.1"
      - name: "Bootstrap package"
        run: melos bootstrap --scope ${{ matrix.package }}_*
      - name: "Install Tools"
        run: |
          sudo npm i -g firebase-tools
      - name: "Build Application"
        run: |
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          export CCACHE_SLOPPINESS=clang_index_store,file_stat_matches,include_file_ctime,include_file_mtime,ivfsoverlay,pch_defines,modules,system_headers,time_macros
          export CCACHE_FILECLONE=true
          export CCACHE_DEPEND=true
          export CCACHE_INODECACHE=true
          ccache -s
          melos exec --scope ${{ matrix.package }}_example -- flutter build ios --no-codesign --simulator --debug
          ccache -s
      - name: Start Firebase Emulator
        run: cd ./.github/workflows/firebase_emulator && ./start.sh
      - name: "E2E Tests"
        run: |
          # Boot simulator and wait for System app to be ready.
          # List of available simulators: https://github.com/actions/runner-images/blob/main/images/macos/macos-13-Readme.md#installed-simulators
          SIMULATOR="iPhone 14"
          xcrun simctl bootstatus "$SIMULATOR" -b
          xcrun simctl logverbose "$SIMULATOR" enable
          # Sleep to allow simulator to settle.
          sleep 15
          # Uncomment following line to have simulator logs printed out for debugging purposes.
          # xcrun simctl spawn booted log stream --predicate 'eventMessage contains "flutter"' &
          melos exec \
            --scope ${{ matrix.package }}_example \
            -c 1 \
            --fail-fast \
            -- flutter test integration_test/${{ matrix.package }}_e2e.dart
